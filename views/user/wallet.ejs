<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Eternal Chapters</title>
    <!-- Bootstrap CSS -->
    <link
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
        rel="stylesheet">
    <link rel="stylesheet" href="userDetails.css">
    <link rel="stylesheet" href="user/wallet.css">
    <link rel="stylesheet" href="user/header.css">
    

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

</head>
<body>

    <%- include('../../views/partials/user/detailsHeader') %>
    <div class="d-flex "style="height: 100 ">
        <!-- Sidebar -->
        <%- include('../../views/partials/user/detailsSidebar') %>
    
        <!-- Main Content Section (for reference) -->
        <div class="container mt-5 mb-5 d-flex justify-content-center align-items-center">

            <div class="col-md-6">
                <div class="wallet-box">
                  <h4>Available Balance</h4>
                  <h2 id="walletBalance">₹ <%= wallet.balance %></h2>
                  <div class="payment-box shadow-sm">
                    <h5 class="text-start mb-0">Payment Method</h5>
                    <p class="text-muted text-start">Select any payment method</p>
                    <div class="form-check text-start">
                      <input class="form-check-input" type="radio" name="paymentMethod" id="creditCard" value="creditCard">
                      <label class="form-check-label" for="creditCard">
                        Debit card / Credit card
                      </label>
                    </div>
                    <div class="form-check text-start">
                      <input class="form-check-input" type="radio" name="paymentMethod" id="upi" value="upi">
                      <label class="form-check-label" for="upi">
                        UPI Method
                      </label>
                    </div>
                    <div class="form-check text-start">
                      <input class="form-check-input" type="radio" name="paymentMethod" id="netBanking" value="netBanking">
                      <label class="form-check-label" for="netBanking">
                        Internet Banking
                      </label>
                    </div>
                    <div class="input-group mt-3">
                      <input id="walletAmount" type="number" class="form-control" placeholder="Enter amount">
                      <button class="btn btn-success" id="addToWalletBtn">Add to Wallet</button>
                    </div>
                  </div>
                  <button class="btn-wallet-history mt-3">Wallet History</button>
                </div>
              </div>
        </div>
        
        
        
    </div>

    <!-- footer -->
    <%- include('../../views/partials/user/detailsFooter') %> 
    

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        document.querySelector('#addToWalletBtn').addEventListener('click', async function () {
            const amount = parseFloat(document.querySelector('#walletAmount').value) * 100
            const selectedPaymentMethod = document.querySelector('input[name = "paymentMethod"]:checked').value

            if(!amount && amount <= 0) {
                Swal.fire({
                    title: "Error",
                    text: "Please enter a valid amount",
                    icon: 'warning',
                    showConfirmButton: false,
                    timer: 2000
                })
                return
            }

            try {
                //create razorpay order
                const response = await fetch('/create-wallet-order', {
                    method: 'POST',
                    headers: { 'Content-type' : 'application/json' },
                    body: JSON.stringify({
                        amount,
                        wallet_id: '<%= wallet._id %>',
                        transaction_type: selectedPaymentMethod,
                    })
                })

                const data = await response.json()
                if(!data.success) {
                    Swal.fire({
                        title: "Error",
                        text: "Failed to create wallet order. Please try again!",
                        icon: 'error',
                        showConfirmButton: false,
                        timer: 2000
                    })
                    return;
                }

                //open razorpay payment window
                const options = {
                    key: '<%= process.env.RAZORPAY_KEY_ID %>',
                    amount: data.amount,
                    currency: data.currency,
                    name: "Eternal Chapters",
                    description: 'Wallet recharge',
                    image: '/img/Logo.png',
                    order_id: data.order_id,
                    handler: function(response) {
                        Swal.fire({
                            title: "Sucess!",
                            text: "Wallet recharge successfull",
                            icon: "success",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(async() => {
                            //update wallet balence in backend
                            const walletUpdateResponse = await fetch('/update-wallet', {
                                method: 'POST',
                                headers: {'Content-type' : 'application/json'},
                                body: JSON.stringify({
                                    amount,
                                    wallet_id: '<%= wallet._id %>',
                                    paymentId: response.razorpay_payment_id,
                                    orderId: response.razorpay_order_id,
                                    signature: response.razorpay_signature,
                                    transaction_type: selectedPaymentMethod,
                                })
                            })

                            const walletData = await walletUpdateResponse.json()
                            if(walletData.success) {
                                //update wallet balence on the frontend
                                document.querySelector('#walletBalance').innerText = `₹ ${walletData.newBalance}`;
                            }else{
                                Swal.fire({
                                    title: "Error!",
                                    text: "Failed to update wallet balance. Please contact support.",
                                    icon: "error",
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                            }
                        })
                    },
                    prefill: {
                        name: '<%= user.name %>',
                        email: '<%= user.email %>',
                        contact: '<%= user.phone %>'
                    },
                    theme: { color: '#3399cc' }
                }
                const rzp1 = new Razorpay(options);
                rzp1.open();
            } catch (error) {
                console.error('Error occurred:', error);
                Swal.fire({
                    title: "Error!",
                    text: "An error occurred. Please try again.",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        })
    </script>

    <% if (success.length > 0) { %>
        <script>
            Swal.fire({
                title: 'Success!',
                text: '<%= success[0] %>',  // Display the success message
                icon: 'success',
                showConfirmButton: false,
                timer: 1500,
                customClass: {
                    popup: 'my-swal-popup', // Custom class for the popup
                    title: 'my-swal-title', // Custom class for the title
                    content: 'my-swal-content', // Custom class for the content (text)
                    confirmButton: 'my-swal-btn' // Custom class for the button
                },
            });
        </script>
    <% } %>


</body>
</html>